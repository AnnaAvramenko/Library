@model Library.ViewModels.OrderViewModel

@{
    List<SelectListItem> listUsers = new List<SelectListItem>();
    foreach (var user in ViewBag.Users)
    {
        listUsers.Add(new SelectListItem
        {
            Text = user.FirstName + " " + user.LastName,
            Value = user.Id.ToString()
        });
    }
    List<SelectListItem> listBooks = new List<SelectListItem>();
    foreach (var book in ViewBag.Books)
    {
        listBooks.Add(new SelectListItem
        {
            Text = book.Name,
            Value = book.Id.ToString()
        });
    }
}

@using (Html.BeginForm("Add", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

       
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserId, listUsers, "-- Select User --")
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BookId, listBooks, "-- Select Book --")
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class=" col-md-5">
                <input type="button" value="Add by Ajax" id="ajaxSubmit" class="btn btn-primary" />
            </div>
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Add by Post" class="btn btn-default" />
            </div>
            
        </div>
    </div>
    <hr />
}


<script type="text/javascript">
    $(document).ready(function () {

        $("#ajaxSubmit").click(function () {
            var startDate = $("#StartDate").val();
            var endDate = $("#EndDate").val();
            var bookId = $("#BookId option:selected").val();
            var userId = $("#UserId option:selected").val();
            if (userId < 1) {
                alert("Please choose a User");
                return false;
            }
            if (bookId < 1) {
                alert("Please choose a Book");
                return false;
            }
            
            DateCheck();


            var model = {
                StartDate: startDate,
                EndDate: endDate,
                BookId: bookId,
                UserId: userId
            }



            $.ajax({
                type: "POST",
                url: "http://localhost:59902/api/values/SaveOrders",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: model,
                success: function (result) {
                    if (result)
                    {
                        window.location.reload();
                    }
                }
            });
        });

    });

    function DateCheck() {
        var StartDate = document.getElementById('StartDate').value;
        var EndDate = document.getElementById('EndDate').value;
        var eDate = new Date(EndDate);
        var sDate = new Date(StartDate);
        if (StartDate != '' && StartDate != '' && sDate > eDate) {
            alert("Please ensure that the End Date is greater than or equal to the Start Date.");
            return false;
        }
    }
</script>



